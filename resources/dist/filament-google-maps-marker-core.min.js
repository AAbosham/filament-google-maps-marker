function googleMapMarker(e){return{value:e.value,zoom:e.zoom,map:null,markers:[],poly:null,center:{lat:0,lng:0},dispatchFormEvent:function(e,t,o){this.$el.closest("form")?.dispatchEvent(new CustomEvent(e,{statePath:t,uuidToDelete:o}));const s=new CustomEvent(e,{statePath:t,uuidToDelete:o});this.$el.dispatchEvent(s)},drawPolyPath:function(){var e=[];for(polyPathIndex=0;polyPathIndex<this.markers.length;polyPathIndex++){var t=this.markers[polyPathIndex];t.map&&e.push(t.getPosition())}this.poly.setPath(e)},addMarker:function(t,o,s){null!=o&&null!=o||(o="key-"+Date.now());let a=new google.maps.Marker({map:this.map,position:t,draggable:e.options.draggable,label:s??null,extra:{markerId:o}});a.addListener("dblclick",(()=>{for(a.setMap(null),delete this.value[a.extra.markerId],dblclickRemoveMarkerIndex=0;dblclickRemoveMarkerIndex<this.markers.length;dblclickRemoveMarkerIndex++){null==this.markers[dblclickRemoveMarkerIndex].map&&this.markers.splice(dblclickRemoveMarkerIndex,1)}this.drawPolyPath()})),a.addListener("position_changed",(()=>{this.drawPolyPath(),this.value[a.extra.markerId]=a.getPosition().toJSON()})),this.markers.push(a),this.drawPolyPath()},getLastStateValue:function(){return this.value[this.getLastStateKey()]},getLastStateKey:function(){return Object.keys(this.value)[Object.keys(this.value).length-1]},setMarkers:function(){var e=Object.keys(this.value).length;for(setMarkerIndex=0;setMarkerIndex<e;setMarkerIndex++){var t=Object.keys(this.value)[setMarkerIndex];let e=this.value[Object.keys(this.value)[setMarkerIndex]];this.addMarker(e,t,null)}},removeMarkers:function(){this.markers.map((function(e){e.setMap(null),e.setVisible(!1)}));for(let e=0;e<this.markers.length;e++)this.markers[e].setMap(null),this.markers[e].setVisible(!1);this.markers=[],this.drawPolyPath()},init:function(){if(this.center=this.value[Object.keys(this.value)[0]]||{lat:0,lng:0},this.map=new google.maps.Map(this.$refs.map,{center:this.center,zoom:e.options.zoom,mapTypeId:e.options.mapTypeId,...e.controls}),this.poly=new google.maps.Polyline({strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:3,geodesic:!0,map:this.map}),this.setMarkers(),Livewire.on("updateMarkersData",(async({data:e})=>{e&&(this.removeMarkers(),this.setMarkers())})),this.map.addListener("click",(t=>{if((e.options.multiple||!(this.markers.length>0))&&!(e.maxItems>0&&this.markers.length>0&&this.markers.length>=e.maxItems)){0==this.markers.length&&(this.value={});var o="key-"+Date.now(),s=t.latLng.toJSON();this.value[o]=s,this.addMarker(t.latLng.toJSON(),o,null)}})),e.options.fixMarkerOnCenter&&(this.map.addListener("drag",(e=>{markers[0].setPosition(this.map.getCenter())})),this.map.addListener("dragend",(e=>{markers[0].setPosition(this.map.getCenter()),this.value[0]=this.map.getCenter().toJSON()}))),e.controls.geolocationControl){const e=this.$refs.locationButton;this.map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(e),e.addEventListener("click",(()=>{navigator.geolocation?navigator.geolocation.getCurrentPosition((e=>{const t={lat:e.coords.latitude,lng:e.coords.longitude};this.addMarker(t),this.map.setCenter(t)}),(()=>{console.log("Browser supports Geolocation but got error. Probably no permission granted.")})):console.log("Browser doesn't support Geolocation")}))}if(e.options.defaultToMyLocation&&0===this.center.lat&&0===this.center.lng&&(navigator.geolocation?navigator.geolocation.getCurrentPosition((e=>{const t={lat:e.coords.latitude,lng:e.coords.longitude};let o={};o["key-"+Date.now()]=t,this.value=o,this.addMarker(t),this.map.setCenter(t)}),(()=>{console.log("Browser supports Geolocation but got error. Probably no permission granted.")})):console.log("Browser doesn't support Geolocation")),e.controls.searchBoxControl){const e=this.$refs.searchBox,t=new google.maps.places.SearchBox(e);this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(e),t.addListener("places_changed",(()=>{e.value="";var o=t.getPlaces()[0].geometry.location;this.addMarker(o),this.map.setCenter(o)}))}e.controls.coordsBoxControl&&(actionsControl=this.$refs.actionsBox,this.map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(actionsControl)),this.$watch("value",(()=>{let e=this.getLastStateValue();e&&(this.map.setCenter(e),this.map.panTo(e))}))}}}
