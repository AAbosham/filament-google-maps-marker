function googleMapMarker(t){return{value:t.value,zoom:t.zoom,map:null,markers:[],poly:null,center:{lat:0,lng:0},dispatchFormEvent:function(t,o,e){this.$el.closest("form")?.dispatchEvent(new CustomEvent(t,{statePath:o,uuidToDelete:e}));const s=new CustomEvent(t,{statePath:o,uuidToDelete:e});this.$el.dispatchEvent(s)},drawPolyPath:function(){var t=[];for(i=0;i<this.markers.length;i++){var o=this.markers[i];o.map&&t.push(o.getPosition())}this.poly.setPath(t)},addMarker:function(o,e,s){null==e&&(e="key-"+Date.now());let a=new google.maps.Marker({map:this.map,position:o,draggable:t.options.draggable,label:s??null,extra:{markerId:e}});a.addListener("dblclick",(()=>{for(a.setMap(null),delete this.value[a.extra.markerId],i=0;i<this.markers.length;i++){null==this.markers[i].map&&this.markers.splice(i,1)}this.drawPolyPath()})),a.addListener("position_changed",(()=>{this.drawPolyPath(),this.value[a.extra.markerId]=a.getPosition().toJSON()})),this.markers.push(a),this.drawPolyPath()},getLastStateValue:function(){return this.value[this.getLastStateKey()]},getLastStateKey:function(){return Object.keys(this.value)[Object.keys(this.value).length-1]},setMarkers:function(){for(i=0;i<Object.keys(this.value).length;i++){var t=Object.keys(this.value)[i];let e=this.value[Object.keys(this.value)[i]];var o=(i+1).toString();this.addMarker(e,t,o)}},init:function(){if(this.center=this.value[Object.keys(this.value)[0]]||{lat:0,lng:0},this.map=new google.maps.Map(this.$refs.map,{center:this.center,zoom:t.options.zoom,mapTypeId:t.options.mapTypeId,...t.controls}),this.poly=new google.maps.Polyline({strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:3,geodesic:!0,map:this.map}),this.setMarkers(),t.options.multiple&&this.map.addListener("click",(o=>{if(!(null!=t.options.maxMarkers&&this.markers.length>=t.options.maxMarkers)){var e="key-"+Date.now(),s=o.latLng.toJSON();this.value[e]=s;var a=(Object.keys(this.value).length+1).toString();this.addMarker(o.latLng.toJSON(),e,a)}})),t.options.fixMarkerOnCenter&&(this.map.addListener("drag",(t=>{markers[0].setPosition(this.map.getCenter())})),this.map.addListener("dragend",(t=>{markers[0].setPosition(this.map.getCenter()),this.value[0]=this.map.getCenter().toJSON()}))),t.controls.geolocationControl){const t=this.$refs.locationButton;this.map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(t),t.addEventListener("click",(()=>{navigator.geolocation?navigator.geolocation.getCurrentPosition((t=>{const o={lat:t.coords.latitude,lng:t.coords.longitude};this.addMarker(o),this.map.setCenter(o)}),(()=>{console.log("Browser supports Geolocation but got error. Probably no permission granted.")})):console.log("Browser doesn't support Geolocation")}))}if(t.options.defaultToMyLocation&&0===this.center.lat&&0===this.center.lng&&(navigator.geolocation?navigator.geolocation.getCurrentPosition((t=>{const o={lat:t.coords.latitude,lng:t.coords.longitude};this.addMarker(o),this.map.setCenter(o)}),(()=>{console.log("Browser supports Geolocation but got error. Probably no permission granted.")})):console.log("Browser doesn't support Geolocation")),t.controls.searchBoxControl){const t=this.$refs.searchBox,o=new google.maps.places.SearchBox(t);this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(t),o.addListener("places_changed",(()=>{t.value="";var e=o.getPlaces()[0].geometry.location;this.addMarker(e),this.map.setCenter(e)}))}t.controls.coordsBoxControl&&(coordsBoxControl=this.$refs.coordsBox,this.map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(coordsBoxControl)),this.$watch("value",(()=>{let o=this.getLastStateValue();t.controls.coordsBoxControl&&(coordsBoxControl.value=o.lat+","+o.lng)}))}}}
